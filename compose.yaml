# # docker compose -f compose.yaml up
# # ou
# # docker compose -f up      
# # ou
# # docker compose up -d
# # docker compose down
# # docker compose up -d --remove-orphans
# #  docker compose up -d --build
# # POSTGRES_TAG=12.17 POSTGRES_PASSWORD=Pg12345 POSTGRES_USER=kubenews POSTGRES_DB=kubenews KUBE_NEWS_TAG=v4  docker compose up -d
# # docker compose --env-file dev.env up -d
# # docker compose -f compose.yaml -f compose.homol.yaml config
# # docker compose --profile dev up -d --build


services:
  postgres:
    container_name: postgres_kubenews
    image: postgres:${POSTGRES_TAG}
    ports:
      - 5432:5432
    profiles:
      - dev
      - homolog
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_docker_vol:/var/lib/postgresql/data
    networks:
      - kube_news_net

  kube_news:
    container_name: kube_news_app
    # deixando o parametro da tag como opcional :-latest
    image: ronaldojssilva/kube-news:${KUBE_NEWS_TAG:-latest}
    build:
      context: ./src
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    networks:
          - kube_news_net
    environment:
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_USERNAME: ${POSTGRES_USER}
      DB_DATABASE:  ${POSTGRES_DB}
      DB_HOST: postgres
    # depends_on:
    #   - postgres

volumes:
  postgres_docker_vol:
    name: postgres_kubenews_vol

networks:
  kube_news_net:
    name: knews_net
    driver: bridge




# services:
#   postgres:
#     container_name: postgres_kubenews
#     image: postgres:${POSTGRES_TAG}
#     ports:
#       - 5432:5432
#     environment:
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_DB: ${POSTGRES_DB}
#     volumes:
#       - postgres_docker_vol:/var/lib/postgresql/data
#     networks:
#       - kube_news_net

# include:
#   - ./kube-new.compose.yaml
  

# volumes:
#   postgres_docker_vol:
#     name: postgres_kubenews_vol

# networks:
#   kube_news_net:
#     name: knews_net
#     driver: bridge



# # usand merge e override
# services:
#   postgres:
#     container_name: postgres_kubenews
#     image: postgres:${POSTGRES_TAG}
#     ports:
#       - 5432:5432
#     environment:
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_DB: ${POSTGRES_DB}
#     volumes:
#       - postgres_docker_vol:/var/lib/postgresql/data
#     networks:
#       - kube_news_net

#   web:
#     extends:
#       file: ./kube-new.compose.yaml
#       service: kube_news
#     image: ronaldojssilva/web-news:latest

# volumes:
#   postgres_docker_vol:
#     name: postgres_kubenews_vol

# networks:
#   kube_news_net:
#     name: knews_net
#     driver: bridge


# # services:
# #   postgres:
# #     container_name: postgres_kubenews
# #     image: postgres:${POSTGRES_TAG}
# #     ports:
# #       - 5432:5432
# #     environment:
# #       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
# #       POSTGRES_USER: ${POSTGRES_USER}
# #       POSTGRES_DB: ${POSTGRES_DB}
# #     volumes:
# #       - postgres_docker_vol:/var/lib/postgresql/data
# #     networks:
# #       - kube_news_net

# #   kube_news:
# #     container_name: kube_news_app
# #     # deixando o parametro da tag como opcional :-latest
# #     image: ronaldojssilva/kube-news:${KUBE_NEWS_TAG:-latest}
# #     build:
# #       context: ./src
# #       dockerfile: Dockerfile
# #     ports:
# #       - 8080:8080
# #     networks:
# #           - kube_news_net
# #     environment:
# #       DB_PASSWORD: ${POSTGRES_PASSWORD}
# #       DB_USERNAME: ${POSTGRES_USER}
# #       DB_DATABASE:  ${POSTGRES_DB}
# #       DB_HOST: postgres
# #     depends_on:
# #       - postgres

# # volumes:
# #   postgres_docker_vol:
# #     name: postgres_kubenews_vol

# # networks:
# #   kube_news_net:
# #     name: knews_net
# #     driver: bridge

# # # version = usando antes da versao 2 do compose, não é mais obrigatório
# # version: "3.8"

# services:
#   postgres:
#     container_name: postgres_kubenews
#     image: postgres:12.17
#     ports:
#       - 5432:5432
#     environment:
#       POSTGRES_PASSWORD: Pg123
#       POSTGRES_USER: kubenews
#       POSTGRES_DB: kubenews
#     volumes:
#       - postgres_docker_vol:/var/lib/postgresql/data
#     networks:
#       - kube_news_net

#   kube_news:
#     container_name: kube_news_app
#     image: ronaldojssilva/kube-news
#     build:
#       context: ./src
#       dockerfile: Dockerfile
#     ports:
#       - 8080:8080
#     networks:
#           - kube_news_net
#     environment:
#       DB_PASSWORD: Pg123
#       DB_USERNAME: kubenews
#       DB_DATABASE: kubenews
#       DB_HOST: postgres
#     depends_on:
#       - postgres

# volumes:
#   postgres_docker_vol:
#     name: postgres_kubenews_vol

# networks:
#   kube_news_net:
#     name: knews_net
#     driver: bridge

# services:
#   nginx:
#     container_name: nginx
#     image: nginx:latest
#     ports:
#       - "8080:80"
#   nginx2:
#     container_name: nginx2
#     image: nginx:latest
#     ports:
#       - "8081:80"
